package com.cdsxt.vo;

import java.lang.reflect.Field;

public class MyTest {

	public static void main(String[] args) throws Exception {
//		test();
		getFields() ;
	}
	static void test() throws Exception {
		//获取反射模板对象的三种方法
		Class clazz1=Class.forName("com.cdsxt.vo.TestBean");
		Class clazz2=TestBean.class;
		TestBean bean=new TestBean();
		bean.getClass();
		//获取反射模板对象的常规信息
		System.out.println(clazz1.getName());
		System.out.println(clazz1.getSimpleName());
		System.out.println(clazz1.getPackage());
	}
	//通过指定类X(TestBean) 的反射模板实例创建 X(TestBean)  的实例。
	public static void getObject()throws Exception{
		Class<TestBean> clazz=TestBean.class;
		TestBean testBean=clazz.newInstance(); //在上述泛型中指定<TestBean>后，可以直接得到TestBean对象
		System.out.println(testBean instanceof TestBean);
	}
	//测试反射模板获取多个属性
		public static void getFields() throws Exception{
			Class clazz=Class.forName("com.cdsxt.vo.TestBean");
			Field[] fields = clazz.getFields();
			for (Field field : fields) {
				System.out.print(field.getName()+",");
				System.out.print(field.getType()+",");
				Class fieldClazz=field.getType();
				System.out.println(fieldClazz.getSimpleName());
			}
	}
}
