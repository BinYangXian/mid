package com.cdsxt.base;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.List;

import com.cdsxt.po.Employee;
import com.cdsxt.util.DBUtil;

public class BaseDao {
	//使用basedao  要求    属性名和字段名一模一样
	//不满足  查询部分字段的时候处理报错
	/*public static List<Object> queryAll(String sql,Class clazz){
		Connection conn=null;
		PreparedStatement ps=null;
		ResultSet rs=null;
		List<Object> list=new ArrayList<Object>();
		try {
			conn=DBUtil.getConn();
			ps=conn.prepareStatement(sql);
			rs=ps.executeQuery();
			while(rs.next()){
				//通过反射模板创建对象
				Object obj=clazz.newInstance();
				Field[] fields=clazz.getDeclaredFields();
				for(Field field:fields){
					String name=field.getName();
					Object value=rs.getObject(name);
					field.setAccessible(true);
					field.set(obj, value);
				}
				list.add(obj);
			}
		}catch (Exception e) {
			e.printStackTrace();
		}finally{
			DBUtil.close(rs,ps,conn);
		}
		return list;
	}*/
	public static List<Object> queryAll(String sql,Class clazz){
		Connection conn=null;
		PreparedStatement ps=null;
		ResultSet rs=null;
		List<Object> list=new ArrayList<Object>();
		try {
			conn=DBUtil.getConn();
			ps=conn.prepareStatement(sql);
			rs=ps.executeQuery();
			ResultSetMetaData rsmd=rs.getMetaData();
			int count=rsmd.getColumnCount();
			while(rs.next()){
				//通过反射模板创建对象
				Object obj=clazz.newInstance();
				for(int i=1;i<=count;i++){
					String fieldName=rsmd.getColumnName(i);
					Field field=clazz.getDeclaredField(fieldName);
					String setter=getSetter(fieldName);
					//获取设定器的方法
					Method method=clazz.getMethod(setter, field.getType());
					method.invoke(obj, rs.getObject(fieldName));
				}
				list.add(obj);
			}
		}catch (Exception e) {
			e.printStackTrace();
		}finally{
			DBUtil.close(rs,ps,conn);
		}
		return list;
	}
	
	//获取设定器的名字
	public static String getSetter(String fieldName){
		return "set"+fieldName.substring(0,1).toUpperCase()+fieldName.substring(1);
	}
	public static void main(String[] args) {
		//满足   select  id,name  from employee
		List<Object> list=queryAll("select * from employee", Employee.class);
		for(Object li:list){
			System.out.println(((Employee)li).getId()+"--"+((Employee)li).getName()+"---"+((Employee)li).getAge());
		}
		
	}
}
